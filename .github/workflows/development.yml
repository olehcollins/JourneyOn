name: Test and Publish (development)

on:
  push:
    branches:
      - development

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    outputs:
      tests_ok: ${{ steps.run-tests.outcome == 'success' }}
    steps:
      - name: ⏳ Check out repository
        uses: actions/checkout@v3

      - name: 🔧 Set up .NET 9.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: 📦 Restore solution
        run: dotnet restore JourneyOn_Server/JourneyOn_Server.sln

      - name: 🛠️ Build solution
        run: dotnet build JourneyOn_Server/JourneyOn_Server.sln --no-restore --configuration Release

      - name: 🧪 Run unit tests
        id: run-tests
        run: |
          dotnet test \
            --no-build \
            --configuration Release \
            --verbosity normal \
            JourneyOn_Server/Tests/Tests.csproj

  publish:
    name: Publish Build Output
    needs: test
    if: needs.test.outputs.tests_ok == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: ⏳ Check out repository
        uses: actions/checkout@v3

      - name: 🔧 Set up .NET 9.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: 📂 Publish application
        run: |
          dotnet publish JourneyOn_Server/API/API.csproj \
            --configuration Release \
            --output publish

      - name: 📦 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-publish
          path: publish/

  smoke-test:
    name: Smoke Test API
    needs: publish
    if: needs.test.outputs.tests_ok == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: ⏳ Download published artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-publish
          path: publish

      - name: ▶️ Start API in background
        run: |
          dotnet publish/API.dll --urls http://localhost:5002 &
          echo "Waiting for API to become ready…" && sleep 10

      - name: ✅ Health check
        run: curl --fail http://localhost:5002/weatherforecast
